{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started The is a simple docker using curl to update DNS record on Cloudflare . Inspired by rasmusbe/cloudflare-update-record.sh . Usage docker run \\ -d \\ -e ZONE=example.com \\ -e HOST=foo.example.com \\ -e EMAIL=example@example.com \\ -e API=1111111111111111 \\ joshava/cloudflare-ddns Release master branch will be build by Travis CI weekly and push to latest and arm32v6 to receive latest security update from upstream images. All arm32v6 images will have a arm32v6 prefix on tags.","title":"Getting Started"},{"location":"#getting-started","text":"The is a simple docker using curl to update DNS record on Cloudflare . Inspired by rasmusbe/cloudflare-update-record.sh .","title":"Getting Started"},{"location":"#usage","text":"docker run \\ -d \\ -e ZONE=example.com \\ -e HOST=foo.example.com \\ -e EMAIL=example@example.com \\ -e API=1111111111111111 \\ joshava/cloudflare-ddns","title":"Usage"},{"location":"#release","text":"master branch will be build by Travis CI weekly and push to latest and arm32v6 to receive latest security update from upstream images. All arm32v6 images will have a arm32v6 prefix on tags.","title":"Release"},{"location":"configuration/","text":"Configuration Parameters Default Description *ZONE Domain, e.g. example.com . *HOST DNS record to be updated, e.g. example.com , subdomain.example.com . *EMAIL Cloudflare Email *API Cloudflare API key TTL 1 Time to live for DNS record. Value of 1 is 'automatic'. Min value:120; Max value:2147483647.Time to live for DNS record. Value of 1 is 'automatic'. Min value:120; Max value:2147483647. PROXY true Whether the record is receiving the performance and security benefits of Cloudflare. true to enable; false to disable. FORCE_CREATE When set, a record will be created if one does not exist already. RUNONCE When set, only a single update is attempted, and the script exists without setting up a cron process. These parameters are required. Example Running once interactively docker run \\ -e RUNONCE=1 \\ -e ZONE=example.com \\ -e HOST=example.com \\ -e EMAIL=example@example.com \\ -e API=1111111111111111 \\ -e TTL=1 \\ -e PROXY=true \\ joshava/cloudflare-ddns Running as a daemon docker run \\ -d \\ -e ZONE=example.com \\ -e HOST=example.com \\ -e EMAIL=example@example.com \\ -e API=1111111111111111 \\ -e TTL=1 \\ -e PROXY=true \\ joshava/cloudflare-ddns","title":"Configuration"},{"location":"configuration/#configuration","text":"Parameters Default Description *ZONE Domain, e.g. example.com . *HOST DNS record to be updated, e.g. example.com , subdomain.example.com . *EMAIL Cloudflare Email *API Cloudflare API key TTL 1 Time to live for DNS record. Value of 1 is 'automatic'. Min value:120; Max value:2147483647.Time to live for DNS record. Value of 1 is 'automatic'. Min value:120; Max value:2147483647. PROXY true Whether the record is receiving the performance and security benefits of Cloudflare. true to enable; false to disable. FORCE_CREATE When set, a record will be created if one does not exist already. RUNONCE When set, only a single update is attempted, and the script exists without setting up a cron process. These parameters are required.","title":"Configuration"},{"location":"configuration/#example","text":"","title":"Example"},{"location":"configuration/#running-once-interactively","text":"docker run \\ -e RUNONCE=1 \\ -e ZONE=example.com \\ -e HOST=example.com \\ -e EMAIL=example@example.com \\ -e API=1111111111111111 \\ -e TTL=1 \\ -e PROXY=true \\ joshava/cloudflare-ddns","title":"Running once interactively"},{"location":"configuration/#running-as-a-daemon","text":"docker run \\ -d \\ -e ZONE=example.com \\ -e HOST=example.com \\ -e EMAIL=example@example.com \\ -e API=1111111111111111 \\ -e TTL=1 \\ -e PROXY=true \\ joshava/cloudflare-ddns","title":"Running as a daemon"},{"location":"faq/","text":"Frequently Asked Questions Q. Why should I use this over nouchka/cloudflare-dyndns ? A. Compare to nouchka/cloudflare-dyndns (4.0): * Smaller size: 4MB vs 54MB * Able to update subdomain * Update when IP is changed Q. Why do you move your image from joshuaavalon/docker-cloudflare to joshava/cloudflare-ddns? A. There are several reasons for me to make this decision. First, DockerHub automatic build service is bad. Not only it is slow, it does not support multiple build well. The rebuild on upstream image updated does not even work. so I have to move to a CI service. However, DockerHub does not support access token (seriously?) which means you have to put your DockerHub password on the CI service. I do not want to risk leaking my account password so I create a bot account for CI usage. Furthermore, DockerHub personal account does not support collaborators. so, I have to create a organize account or convert my account to organize. Because I want to keep my current account, so I create joshava (because I am poor at naming things \ud83e\udd37\u200d\u2642\ufe0f). Q. How do I run this on Raspberry Pi? A. Use image with arm32v6 tags.","title":"Frequently Asked Questions"},{"location":"faq/#frequently-asked-questions","text":"Q. Why should I use this over nouchka/cloudflare-dyndns ? A. Compare to nouchka/cloudflare-dyndns (4.0): * Smaller size: 4MB vs 54MB * Able to update subdomain * Update when IP is changed Q. Why do you move your image from joshuaavalon/docker-cloudflare to joshava/cloudflare-ddns? A. There are several reasons for me to make this decision. First, DockerHub automatic build service is bad. Not only it is slow, it does not support multiple build well. The rebuild on upstream image updated does not even work. so I have to move to a CI service. However, DockerHub does not support access token (seriously?) which means you have to put your DockerHub password on the CI service. I do not want to risk leaking my account password so I create a bot account for CI usage. Furthermore, DockerHub personal account does not support collaborators. so, I have to create a organize account or convert my account to organize. Because I want to keep my current account, so I create joshava (because I am poor at naming things \ud83e\udd37\u200d\u2642\ufe0f). Q. How do I run this on Raspberry Pi? A. Use image with arm32v6 tags.","title":"Frequently Asked Questions"}]}